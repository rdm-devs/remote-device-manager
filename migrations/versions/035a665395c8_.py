"""empty message

Revision ID: 035a665395c8
Revises: 
Create Date: 2024-09-15 20:35:00.279971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '035a665395c8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Entity_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Entity_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entity_id'), 'entity', ['id'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Role_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Role_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('tenant',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Tenant_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Tenant_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenant_id'), 'tenant', ['id'], unique=False)
    op.create_index(op.f('ix_tenant_name'), 'tenant', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_User_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_User_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('auth_refresh_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('refresh_token', sa.String(length=1000), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('valid', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_AuthRefreshToken_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_AuthRefreshToken_updated_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_refresh_tokens_id'), 'auth_refresh_tokens', ['id'], unique=False)
    op.create_table('folder',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Folder_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['folder.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Folder_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_folder_id'), 'folder', ['id'], unique=False)
    op.create_index(op.f('ix_folder_name'), 'folder', ['name'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('DEVICE', 'FOLDER', 'TENANT', 'USER', 'GLOBAL', 'USER_CREATED', name='type'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Tag_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Tag_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=False)
    op.create_index(op.f('ix_tag_name'), 'tag', ['name'], unique=False)
    op.create_table('tenants_and_users',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id', 'user_id')
    )
    op.create_table('device',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_online', sa.Boolean(), nullable=False),
    sa.Column('heartbeat_timestamp', sa.DateTime(), nullable=False),
    sa.Column('folder_id', sa.Integer(), nullable=True),
    sa.Column('id_rust', sa.String(length=255), nullable=True),
    sa.Column('pass_rust', sa.String(length=255), nullable=True),
    sa.Column('last_screenshot_path', sa.String(length=255), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.Column('ip_address', sa.String(length=15), nullable=True),
    sa.Column('os_name', sa.String(length=255), nullable=False),
    sa.Column('os_version', sa.String(length=255), nullable=False),
    sa.Column('os_kernel_version', sa.String(length=255), nullable=False),
    sa.Column('vendor_name', sa.String(length=255), nullable=False),
    sa.Column('vendor_model', sa.String(length=255), nullable=False),
    sa.Column('vendor_cores', sa.Integer(), nullable=False),
    sa.Column('vendor_ram_gb', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='fk_Device_created_by_id', use_alter=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['user.id'], name='fk_Device_updated_by_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_id'), 'device', ['id'], unique=False)
    op.create_index(op.f('ix_device_is_online'), 'device', ['is_online'], unique=False)
    op.create_index(op.f('ix_device_name'), 'device', ['name'], unique=False)
    op.create_index(op.f('ix_device_os_name'), 'device', ['os_name'], unique=False)
    op.create_index(op.f('ix_device_vendor_name'), 'device', ['vendor_name'], unique=False)
    op.create_table('entities_and_tags',
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('entity_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('entities_and_tags')
    op.drop_index(op.f('ix_device_vendor_name'), table_name='device')
    op.drop_index(op.f('ix_device_os_name'), table_name='device')
    op.drop_index(op.f('ix_device_name'), table_name='device')
    op.drop_index(op.f('ix_device_is_online'), table_name='device')
    op.drop_index(op.f('ix_device_id'), table_name='device')
    op.drop_table('device')
    op.drop_table('tenants_and_users')
    op.drop_index(op.f('ix_tag_name'), table_name='tag')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_folder_name'), table_name='folder')
    op.drop_index(op.f('ix_folder_id'), table_name='folder')
    op.drop_table('folder')
    op.drop_index(op.f('ix_auth_refresh_tokens_id'), table_name='auth_refresh_tokens')
    op.drop_table('auth_refresh_tokens')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_tenant_name'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_id'), table_name='tenant')
    op.drop_table('tenant')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_entity_id'), table_name='entity')
    op.drop_table('entity')
    # ### end Alembic commands ###
